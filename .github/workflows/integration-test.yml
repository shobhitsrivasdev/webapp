name: Integration Tests

on:
  pull_request:
    branches:
      - main # Assuming your primary branch is named 'main'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.PGDATABASE }}
          POSTGRES_USER: ${{ secrets.PGUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_PORT: ${{ secrets.PGPORT }}
          POSTGRES_HOST: ${{ secrets.PGHOST }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: "Create env file"
        run: |
          touch .env
          echo PGDATABASE="postgres" >> .env
          echo PGUSER=${{ secrets.PGUSER }} >> .env
          echo PGPASSWORD=$POSTGRES_PASSWORD >> .env
          echo PGPORT=$POSTGRES_PORT >> .env
          echo PGHOST=$POSTGRES_HOST >> .env
          echo "cat .env"
          cat .env
          echo "ls -a ."
          ls -a .
          echo "ls -a ${{ github.workspace }}"
          ls -a ${{ github.workspace }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x # Assuming you are using Node.js. Change this accordingly.

      - name: Install Dependencies
        run: npm install # chekcout to directory, touch a enc file, pull all secrets

      - name: Run Integration Tests
        run: npm run test:integration # Assuming you have a script in your package.json named "test:integration" that runs your integration tests.
